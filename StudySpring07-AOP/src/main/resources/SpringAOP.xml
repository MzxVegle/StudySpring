<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1、配置目标target-->
    <bean id="userServices" class="com.Vegle.Implements.UserServicesImpl"></bean>
    <!--2、配置通知advice-->
    <bean id="userServicesAdvice" class="com.Vegle.Advices.UserServicesAdvise"></bean>
    <aop:config>
        <!--需要导入AsepctJ的Jar包，以用来解析表达式-->
        <!--expression的写法是源自于Aspect的写法，在Spring的开发中，
            只支持Aspect的部分写法
            在开发中使用最多的就是execution表达式
            常用的写法有：
                1、execution(public * *())   拦截所有public方法
                2、execution(* com.Vegle.InterFaces.*(..))  拦截指定包下的所有类的方法（不包括子包）
                3、execution(* com.Vegle.InterFaces..*(..))  拦截指定包以及子包下的所有类的方法
                4、execution(* com.Vegle.InterFaces.UserServices.*(..))  拦截UserServices的所有方法
                5、execution(* com.Vegle.InterFaces.UserServices+.*(..)) 拦截所有实现特定接口的类的方法
                6、execution(* add*.*(..))   去拦截所有add开头的方法
        -->
        <aop:pointcut id="pointcutT" expression="execution(* *.*(..))"/>
        <aop:advisor advice-ref="userServicesAdvice" pointcut-ref="pointcutT"/>
    </aop:config>
</beans>